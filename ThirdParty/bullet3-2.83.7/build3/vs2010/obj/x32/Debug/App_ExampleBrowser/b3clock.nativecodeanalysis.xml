<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\users\win\documents\bullet3-2.83.7\examples\utils\</FILEPATH><FILENAME>b3clock.cpp</FILENAME><LINE>94</LINE><COLUMN>34</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>b3Clock::reset</FUNCTION><DECORATED>?reset@b3Clock@@QAEXXZ</DECORATED><FUNCLINE>90</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>c:\users\win\documents\bullet3-2.83.7\examples\utils\</FILEPATH><FILENAME>b3clock.cpp</FILENAME><LINE>125</LINE><COLUMN>43</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>b3Clock::getTimeMilliseconds</FUNCTION><DECORATED>?getTimeMilliseconds@b3Clock@@QAEKXZ</DECORATED><FUNCLINE>112</FUNCLINE><PATH/></DEFECT><DEFECT><SFA><FILEPATH>c:\users\win\documents\bullet3-2.83.7\examples\utils\</FILEPATH><FILENAME>b3clock.cpp</FILENAME><LINE>183</LINE><COLUMN>43</COLUMN></SFA><DEFECTCODE>28159</DEFECTCODE><DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION><FUNCTION>b3Clock::getTimeMicroseconds</FUNCTION><DECORATED>?getTimeMicroseconds@b3Clock@@QAEKXZ</DECORATED><FUNCLINE>168</FUNCLINE><PATH/></DEFECT></DEFECTS>